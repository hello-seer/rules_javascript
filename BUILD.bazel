load("//commonjs:rules.bzl", "cjs_root")
load("//eslint:rules.bzl", "configure_eslint")
load("//javascript:rules.bzl", "js_library")
load("//nodejs:rules.bzl", "nodejs_binary")
load("//prettier:rules.bzl", "configure_prettier")
load("@rules_format//buildifier:rules.bzl", "buildifier")
load("@rules_format//format:rules.bzl", "format")

package(default_visibility = ["//visibility:public"])

buildifier(
    name = "buildifier",
)

format(
    name = "buildifier_format",
    srcs = ["@better_rules_javascript_files//:buildifier_files"],
    formatter = ":buildifier",
    prefix = "external/better_rules_javascript_files/files",
)

configure_prettier(
    name = "prettier",
    config = "prettierrc.yml",
    dep = "@better_rules_javascript_npm//prettier:lib",
)

format(
    name = "prettier_format",
    srcs = ["@better_rules_javascript_files//:prettier_files"],
    formatter = ":prettier",
    prefix = "external/better_rules_javascript_files/files",
)

nodejs_binary(
    name = "doctoc",
    dep = "@better_rules_javascript_npm//doctoc:lib",
    main = "doctoc.js",
)

test_suite(
    name = "test",
    tests = [
        "//nodejs/test",
        "//rollup/test",
    ],
)

configure_eslint(
    name = "eslint",
    config = ":eslint_config",
    config_path = ".eslintrc.js",
    dep = "@better_rules_javascript_npm//eslint:lib",
)

format(
    name = "eslint_lint",
    srcs = ["@better_rules_javascript_files//:eslint_files"],
    formatter = ":eslint",
    prefix = "external/better_rules_javascript_files/files",
)

cjs_root(
    name = "root",
    package_name = "@better_rules_javascript/root",
    descriptors = ["package.json"],
)

js_library(
    name = "eslint_config",
    srcs = [".eslintrc.js"],
    root = ":root",
    # global_deps
    deps = [
        "@better_rules_javascript_npm//typescript:lib",
        "@better_rules_javascript_npm//typescript_eslint_eslint_plugin:lib",
        "@better_rules_javascript_npm//typescript_eslint_parser:lib",
    ],
)
