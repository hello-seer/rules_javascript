load("@rules_file//buildifier:rules.bzl", "buildifier")
load("@rules_file//generate:rules.bzl", "format", "generate_test", "multi_generate")
load("//eslint:rules.bzl", "configure_eslint")
load("//prettier:rules.bzl", "configure_prettier")
load("//npm:rules.bzl", "yarn_resolve")

buildifier(
    name = "buildifier",
)

format(
    name = "buildifier_format",
    srcs = ["@better_rules_javascript_files//:buildifier_files"],
    formatter = ":buildifier",
    strip_prefix = "files",
)

configure_eslint(
    name = "eslint",
    config = "//:eslint_config",
    dep = "@better_rules_javascript_npm//eslint:lib",
    plugins = [
        "@better_rules_javascript_npm//typescript:lib",
        "@better_rules_javascript_npm//@typescript-eslint/eslint-plugin:lib",
        "@better_rules_javascript_npm//@typescript-eslint/parser:lib",
    ],
)

format(
    name = "eslint_lint",
    srcs = ["@better_rules_javascript_files//:eslint_files"],
    formatter = ":eslint",
    strip_prefix = "files",
)

generate_test(
    name = "eslint_test",
    generate = ":eslint_lint",
)

multi_generate(
    name = "format",
    deps = [
        ":buildifier_format",
        ":prettier_format",
    ],
)

generate_test(
    name = "format_test",
    generate = ":format",
)

sh_binary(
    name = "gen_bazelrc",
    srcs = ["gen-bazelrc.sh"],
    data = ["deleted.bazelrc.tpl"],
)

sh_binary(
    name = "gen_js",
    srcs = ["gen-js.sh"],
    data = [":gen_js_data"],
)

filegroup(
    name = "gen_js_data",
    srcs = [
        "//commonjs/manifest:bundle",
        "//nodejs/esm-linker:bundle",
        "//nodejs/fs-linker:bundle",
        "//nodejs/module-linker:bundle",
        "//nodejs/runtime:bundle",
    ],
)

sh_binary(
    name = "install_npm",
    srcs = ["install-npm.sh"],
    data = [":install_npm_data"],
)

filegroup(
    name = "install_npm_data",
    srcs = ["//:nodejs_archive"],
)

alias(
    name = "lint",
    actual = ":eslint_lint",
)

alias(
    name = "lint_test",
    actual = ":eslint_test",
)

configure_prettier(
    name = "prettier",
    config = "//:prettier_config",
    dep = "@better_rules_javascript_npm//prettier:lib",
)

format(
    name = "prettier_format",
    srcs = ["@better_rules_javascript_files//:prettier_files"],
    formatter = ":prettier",
    strip_prefix = "files",
)

yarn_resolve(
    name = "resolve_npm",
    output = "rules/npm_data.bzl",
)
